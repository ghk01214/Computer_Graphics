1.
행렬과 관련된 일체의 행동과 변수를 관리하는 Matrix란 클래스를 생성.
클래스 내에 크기가 4x4인 이차원 배열 2개, 행렬의 사칙연산의 결과를 출력할 크기가 4x4인 2차원 배열을 생성.
각 행렬의 행렬식의 값을 출력할 정수형 변수를 생성.
행렬의 전치 여부와 4x4로의 변환 여부를 확인하는 불 대수 생성.
위 변수들을 클래스 내의 private 영역에 생성.
public 영역에 위 변수들과 상호작용을 하는 함수들을 생성.
두 행렬을 더하고 빼고 곱하는 함수를 각각 별도로 생성.
행렬의 사칙연산 결과를 출력하는 함수를 생성.
결과를 출력하는 함수에선 받아들인 인자로 출력할 연산 기호를 결정.
행렬식의 값을 출력하는 함수에선 행렬의 전치 여부를 확인하고 이에 따른 임시 2차원 배열에 값을 복사 후 행렬식 계산.
행렬식의 값을 계산하는 함수는 재귀함수의 형태로 구현.
Initialize 함수를 통해 행렬의 값을 랜덤하게 초기화, 생성자 함수 및 리셋 명령에서 작동하도록 설정.
행렬의 전치를 결정하는 함수를 설정하여 행렬식 출력 함수에서 행렬을 전치시키도록 설정.
3x3 행렬을 4x4 행렬로 확장시키는 함수에서 변환 불 대수를 true로 변경하고 각 행렬의 4행 4열의 위치를 1로 초기화.
전치 행렬 함수와 크기 변환 함수에서 변환시킨 행렬은 함수가 종료되기 전에 원 상태로 복구 시킨다.
함수의 명령을 실행하는 키는 프로그램 실행시 상단에 출력하도록 구현.

2.
파일을 읽기 상태로 오픈하고 fread 함수를 이용하여 임시 버퍼에 전체 내용물을 저장.
파일이 없을 경우 안내문과 함께 프로그램을 종료.
임시 버퍼에 저장된 내용물 출력.
strtok 함수로 각각의 토큰들을 분리.
분리된 토큰에 숫자가 있는지 아스키 값을 이용하여 판별.
프로그램의 동작 시간 단축을 위하여 토큰의 길이만큼만 반복문 실행.
토큰 내에 아스키 값이 숫자에 해당하는 문자가 있으면 iNumber를 1 더한다.
토큰 내에 아스키 값이 숫자에 해당하는 문자가 없으면 iWord를 1 더한다.
토큰이 더 이상 분리되지 않을 때까지 계속 토큰을 분리하고 판별.
모든 토큰의 분리가 끝나면 총 숫자의 개수와 총 문자의 개수를 출력.